$(document).ready(function () {
    function e() {
        (f = document.getElementById("box-renderer")), (_ = new THREE.PerspectiveCamera(20, window.innerWidth / window.innerHeight, 1, 15)), _.position.set(3, 0.5, 3), (g = new THREE.Scene()), (g.fog = new THREE.Fog(7496795, 2, 15));
        var e = new THREE.Mesh(new THREE.PlaneBufferGeometry(40, 40), new THREE.MeshPhongMaterial({ color: 10066329, specular: 1052688 }));
        (e.rotation.x = -Math.PI / 2), (e.position.y = -0.5), g.add(e), (e.receiveShadow = !0), (H = new THREE.TextureLoader());
        for (var r = THREE.SmoothShading, o = 0; 11 > o; o++)
            (N[o] = H.load("objects/text/" + o + ".jpg")),
                (J[o] = H.load("objects/text/" + o + "_specular.jpg")),
                (Q[o] = H.load("objects/text/" + o + "_normal.jpg")),
                (N[o].anisotropy = 16),
                (I[o] = new THREE.MeshPhongMaterial({ ambient: 328965, color: 16777215, specular: 5592405, shininess: 30, map: N[o], specularMap: J[o], normalMap: Q[o], roughness: 0, shading: r, reflectivity: 0.1 })),
                (F[o] = [I[o]]);
        var l,
            E,
            w,
            p = 0;
        for (index in T) {
            var h = T[index];
            0 == p ? ((p = 1), (l = a(h)), (E = c(h))) : ((l = i(l, a(h))), (E = d(E, c(h))));
            var x = [
                new THREE.Vector3(h.x1, h.y1, h.z1),
                new THREE.Vector3(h.x1, h.y1, h.z2),
                new THREE.Vector3(h.x2, h.y1, h.z2),
                new THREE.Vector3(h.x2, h.y1, h.z1),
                new THREE.Vector3(h.x1, h.y2, h.z1),
                new THREE.Vector3(h.x1, h.y2, h.z2),
                new THREE.Vector3(h.x2, h.y2, h.z2),
                new THREE.Vector3(h.x2, h.y2, h.z1),
            ];
            (k = h.t), (w = "PLY" == k ? 10 : "P" == k ? 5 : "MP" == k ? 7 : "DMP" == k ? 2 : 6);
            var m = THREE.SceneUtils.createMultiMaterialObject(new THREE.ConvexGeometry(x), F[w]);
            (m.children[0].receiveShadow = !0), (m.children[0].castShadow = !0), D.add(m);
        }
        R = s(l, E, 5e-4);
        for (var o = 0; o < D.children.length; o++) D.children[o].children[0].geometry.translate(R.x, R.y, R.z);
        D.position.set(0, -0.2, 0),
            D.scale.set(5e-4, 5e-4, 5e-4),
            g.add(D),
            g.add(new THREE.HemisphereLight(4469555, 1118498)),
            t(1, 1, 1, 16777215, 0.7),
            t(0.5, 1, -1, 14540253, 1),
            (y = new THREE.WebGLRenderer({ antialias: !0 })),
            y.setClearColor(g.fog.color),
            y.setPixelRatio(window.devicePixelRatio),
            (renderer_width = window.innerWidth < 768 ? window.innerWidth - 30 : window.innerWidth / 2 - 30),
            (renderer_height = window.innerWidth < 768 ? window.innerWidth : window.innerHeight / 2),
            y.setSize(renderer_width, renderer_height),
            (y.gammaInput = !0),
            (y.gammaOutput = !0),
            (y.shadowMap.enabled = !0),
            (y.shadowMap.cullFace = THREE.CullFaceBack),
            f.appendChild(y.domElement);
        new THREE.OrbitControls(_, y.domElement);
        (u = new Stats()), (u.domElement.style.position = "absolute"), (u.domElement.style.top = "0px"), f.appendChild(u.domElement), window.addEventListener("resize", n, !1);
    }
    function t(e, t, n, r, o) {
        var a = new THREE.DirectionalLight(r, o);
        a.position.set(e, t, n), g.add(a), (a.castShadow = !0);
        var c = 1;
        (a.shadowCameraLeft = -c),
            (a.shadowCameraRight = c),
            (a.shadowCameraTop = c),
            (a.shadowCameraBottom = -c),
            (a.shadowCameraNear = 1),
            (a.shadowCameraFar = 4),
            (a.shadowMapWidth = 1024),
            (a.shadowMapHeight = 1024),
            (a.shadowBias = -0.005);
    }
    function n() {
        (_.aspect = window.innerWidth / window.innerHeight),
            _.updateProjectionMatrix(),
            (renderer_width = window.innerWidth < 768 ? window.innerWidth - 30 : window.innerWidth / 2 - 30),
            (renderer_height = window.innerWidth < 768 ? window.innerWidth : window.innerHeight / 2),
            y.setSize(renderer_width, renderer_height);
    }
    function r() {
        requestAnimationFrame(r), o(), u.update();
    }
    function o() {
        5e-4 * Date.now();
        _.lookAt(R), y.render(g, _);
    }
    function a(e) {
        var t = e.x1 > e.x2 ? e.x2 : e.x1,
            n = e.y1 > e.y2 ? e.y2 : e.y1,
            r = e.z1 > e.z2 ? e.z2 : e.z1;
        return new THREE.Vector3(t, n, r);
    }
    function c(e) {
        var t = e.x1 < e.x2 ? e.x2 : e.x1,
            n = e.y1 < e.y2 ? e.y2 : e.y1,
            r = e.z1 < e.z2 ? e.z2 : e.z1;
        return new THREE.Vector3(t, n, r);
    }
    function i(e, t) {
        var n = e.x > t.x ? t.x : e.x,
            r = e.y > t.y ? t.y : e.y,
            o = e.z > t.z ? t.z : e.z;
        return new THREE.Vector3(n, r, o);
    }
    function d(e, t) {
        var n = e.x < t.x ? t.x : e.x,
            r = e.y < t.y ? t.y : e.y,
            o = e.z < t.z ? t.z : e.z;
        return new THREE.Vector3(n, r, o);
    }
    function s(e, t, n) {
        var r = (n * (e.x + t.x)) / 2,
            o = (n * (e.y + t.y)) / 2,
            a = (n * (e.z + t.z)) / 2;
        return new THREE.Vector3(r, o, a);
    }
    function l() {
        (v = document.getElementById("line-top-renderer")),
            (V = document.getElementById("line-front-renderer")),
            (b = document.getElementById("line-side-renderer")),
            (M = new THREE.PerspectiveCamera(20, window.innerWidth / window.innerHeight, 0.1, 1e3)),
            M.position.set(3, 0.5, 3),
            (W = new THREE.Vector3(0, 0, 0)),
            (m = new THREE.Scene()),
            (m.fog = new THREE.Fog(7496795, 2, 15)),
            (z = new THREE.Scene()),
            (z.fog = new THREE.Fog(7496795, 2, 15)),
            (j = new THREE.Scene()),
            (j.fog = new THREE.Fog(7496795, 2, 15)),
            (renderer_width = window.innerWidth < 768 ? window.innerWidth - 30 : window.innerWidth / 3 - 100),
            (renderer_height = window.innerWidth < 768 ? window.innerWidth : window.innerHeight / 3),
            (L = new THREE.TextureLoader());
        var e = (THREE.SmoothShading, new THREE.PlaneGeometry(U[0], U[1])),
            t = new THREE.PlaneGeometry(Y[0], Y[1]),
            r = new THREE.PlaneGeometry(q[0], q[1]),
            o = L.load("objects/png/std_crate_top.png"),
            a = L.load("objects/png/std_crate_front.png"),
            c = L.load("objects/png/std_crate_side.png"),
            i = new THREE.MeshBasicMaterial({ map: o, transparent: !0 }),
            d = new THREE.MeshBasicMaterial({ map: a, transparent: !0 }),
            s = new THREE.MeshBasicMaterial({ map: c, transparent: !0 });
        (G = new THREE.Mesh(e, i)),
            G.scale.set(K * U[0], K * U[1], 1),
            G.position.set(3, 0.5, 0),
            (A = new THREE.Mesh(t, d)),
            A.scale.set(K * Y[0], K * Y[1], 1),
            A.position.set(3, 0.5, 0),
            (O = new THREE.Mesh(r, s)),
            O.scale.set((K * q[0] * renderer_width) / renderer_height, K * q[1], 1),
            O.position.set(3, 0.5, 0),
            m.add(G),
            z.add(A),
            j.add(O),
            m.add(new THREE.HemisphereLight(4469555, 1118498)),
            (P = new THREE.WebGLRenderer({ antialias: !0 })),
            P.setClearColor(m.fog.color),
            P.setPixelRatio(window.devicePixelRatio),
            P.setSize(renderer_width, renderer_height),
            v.appendChild(P.domElement),
            (S = new THREE.WebGLRenderer({ antialias: !0 })),
            S.setClearColor(z.fog.color),
            S.setPixelRatio(window.devicePixelRatio),
            S.setSize(renderer_width, renderer_height),
            V.appendChild(S.domElement),
            (C = new THREE.WebGLRenderer({ antialias: !0 })),
            C.setClearColor(j.fog.color),
            C.setPixelRatio(window.devicePixelRatio),
            C.setSize(renderer_width, renderer_height),
            b.appendChild(C.domElement),
            window.addEventListener("resize", n, !1);
    }
    function E() {
        requestAnimationFrame(E), w();
    }
    function w() {
        5e-4 * Date.now();
        P.render(m, M), S.render(z, M), C.render(j, M);
    }
    function p(e, t, n) {
        x(e, t, n);
    }
    function h(e) {
        $("#all").prop("checked")
            ? (p(G, "objects/png/" + e + "_top.png", "top"), p(A, "objects/png/" + e + "_front.png", "front"), p(O, "objects/png/" + e + "_side.png", "side"))
            : $("#base").prop("checked")
            ? (p(G, "objects/png/" + e + "_base_top.png", "top"), p(A, "objects/png/" + e + "_base_front.png", "front"), p(O, "objects/png/" + e + "_base_side.png", "side"))
            : $("#side").prop("checked")
            ? (p(G, "objects/png/" + e + "_side_top.png", "top"), p(A, "objects/png/" + e + "_side_front.png", "front"), p(O, "objects/png/" + e + "_side_side.png", "side"))
            : $("#end").prop("checked")
            ? (p(G, "objects/png/" + e + "_end_top.png", "top"), p(A, "objects/png/" + e + "_end_front.png", "front"), p(O, "objects/png/" + e + "_end_side.png", "side"))
            : $("#top").prop("checked")
            ? (p(G, "objects/png/" + e + "_top_top.png", "top"), p(A, "objects/png/" + e + "_top_front.png", "front"), p(O, "objects/png/" + e + "_top_side.png", "side"))
            : (p(G, "objects/png/" + e + "_top.png", "top"), p(A, "objects/png/" + e + "_front.png", "front"), p(O, "objects/png/" + e + "_side.png", "side"));
    }
    function x(e, t, n) {
        var r = new Image();
        (r.src = t),
            (r.onload = function () {
                console.log("width : " + r.width),
                    "top" == n ? (U = [r.width, r.height]) : "front" == n ? (Y = [r.width, r.height]) : "side" == n ? (side_side = [r.width, r.height]) : ((U = [512, 256]), (Y = [512, 256]), (side_side = [512, 256])),
                    L.load(t, function (t) {
                        e.material.map = t;
                    });
            });
    }
    Detector.webgl || Detector.addGetWebGLMessage();
    var f,
        u,
        _,
        R,
        g,
        y,
        H,
        T,
        m,
        z,
        j,
        v,
        V,
        b,
        M,
        P,
        S,
        C,
        W,
        L,
        G,
        A,
        O,
        B,
        D = new THREE.Group(),
        F = new Array(),
        N = new Array(),
        I = new Array(),
        J = new Array(),
        Q = new Array(),
        U = (new THREE.Group(), [378, 277]),
        Y = [378, 277],
        q = [283, 287],
        K = 11e-6;
    $.ajax({ url: "objects/std-crate.js" })
        .done(function (t) {
            (T = jQuery.parseJSON(t)), e(), r();
        })
        .fail(function () {
            alert("Ajax failed!");
        }),
        $.ajax({ url: "objects/std-crate-top.js" })
            .done(function (e) {
                (B = jQuery.parseJSON(e)), l(), E();
            })
            .fail(function () {
                alert("Ajax failed!");
            }),
        $("#display-case").click(function () {
            $.ajax({ url: "objects/display-case.js" })
                .done(function (e) {
                    for (; D.children.length > 0; ) {
                        var t = D.children[D.children.length - 1];
                        D.remove(t);
                    }
                    g.remove(D);
                    var n;
                    T = jQuery.parseJSON(e);
                    for (index in T) {
                        var r = T[index],
                            o = [
                                new THREE.Vector3(r.x1, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z1),
                            ];
                        (n = r.t), "PLY" == n ? (sel_texture = 10) : "P" == n ? (sel_texture = 5) : "MP" == n ? (sel_texture = 7) : "DMP" == n ? (sel_texture = 2) : (sel_texture = 6);
                        var a = THREE.SceneUtils.createMultiMaterialObject(new THREE.ConvexGeometry(o), F[sel_texture]);
                        (a.children[0].receiveShadow = !0), (a.children[0].castShadow = !0), D.add(a);
                    }
                    D.position.set(0, -0.2, 0), D.scale.set(5e-4, 5e-4, 5e-4), g.add(D), h("display_case");
                })
                .fail(function () {
                    alert("Ajax failed!");
                });
        }),
        $("#fs-case").click(function () {
            $.ajax({ url: "objects/fs-case.js" })
                .done(function (e) {
                    for (; D.children.length > 0; ) {
                        var t = D.children[D.children.length - 1];
                        D.remove(t);
                    }
                    g.remove(D);
                    var n;
                    T = jQuery.parseJSON(e);
                    for (index in T) {
                        var r = T[index],
                            o = [
                                new THREE.Vector3(r.x1, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z1),
                            ];
                        (n = r.t), "PLY" == n ? (sel_texture = 10) : "P" == n ? (sel_texture = 5) : "MP" == n ? (sel_texture = 7) : "DMP" == n ? (sel_texture = 2) : (sel_texture = 6), console.log("fs-case : " + n);
                        var a = THREE.SceneUtils.createMultiMaterialObject(new THREE.ConvexGeometry(o), F[sel_texture]);
                        (a.children[0].receiveShadow = !0), (a.children[0].castShadow = !0), D.add(a);
                    }
                    D.position.set(0, -0.2, 0), D.scale.set(5e-4, 5e-4, 5e-4), g.add(D), h("fs_case");
                })
                .fail(function () {
                    alert("Ajax failed!");
                });
        }),
        $("#fs-crate").click(function () {
            $.ajax({ url: "objects/fs-crate.js" })
                .done(function (e) {
                    for (console.log("data1:" + D.children.length); D.children.length > 0; ) {
                        var t = D.children[D.children.length - 1];
                        D.remove(t);
                    }
                    g.remove(D);
                    var n;
                    T = jQuery.parseJSON(e);
                    for (index in T) {
                        var r = T[index],
                            o = [
                                new THREE.Vector3(r.x1, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z1),
                            ];
                        (n = r.t), "PLY" == n ? (sel_texture = 10) : "P" == n ? (sel_texture = 5) : "MP" == n ? (sel_texture = 7) : "DMP" == n ? (sel_texture = 2) : (sel_texture = 6);
                        var a = THREE.SceneUtils.createMultiMaterialObject(new THREE.ConvexGeometry(o), F[sel_texture]);
                        (a.children[0].receiveShadow = !0), (a.children[0].castShadow = !0), D.add(a);
                    }
                    D.position.set(0, -0.2, 0), D.scale.set(5e-4, 5e-4, 5e-4), g.add(D), h("fs_crate");
                })
                .fail(function () {
                    alert("Ajax failed!");
                });
        }),
        $("#std-case").click(function () {
            $.ajax({ url: "objects/std-case.js" })
                .done(function (e) {
                    for (console.log("data1:" + D.children.length); D.children.length > 0; ) {
                        var t = D.children[D.children.length - 1];
                        D.remove(t);
                    }
                    g.remove(D);
                    var n;
                    T = jQuery.parseJSON(e);
                    for (index in T) {
                        var r = T[index],
                            o = [
                                new THREE.Vector3(r.x1, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z1),
                            ];
                        (n = r.t), "PLY" == n ? (sel_texture = 10) : "P" == n ? (sel_texture = 5) : "MP" == n ? (sel_texture = 7) : "DMP" == n ? (sel_texture = 2) : (sel_texture = 6);
                        var a = THREE.SceneUtils.createMultiMaterialObject(new THREE.ConvexGeometry(o), F[sel_texture]);
                        (a.children[0].receiveShadow = !0), (a.children[0].castShadow = !0), D.add(a);
                    }
                    D.position.set(0, -0.2, 0), D.scale.set(5e-4, 5e-4, 5e-4), g.add(D), h("std_case");
                })
                .fail(function () {
                    alert("Ajax failed!");
                });
        }),
        $("#std-crate").click(function () {
            $.ajax({ url: "objects/std-crate.js" })
                .done(function (e) {
                    for (; D.children.length > 0; ) {
                        var t = D.children[D.children.length - 1];
                        D.remove(t);
                    }
                    g.remove(D);
                    var n;
                    T = jQuery.parseJSON(e);
                    for (index in T) {
                        var r = T[index],
                            o = [
                                new THREE.Vector3(r.x1, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z2),
                                new THREE.Vector3(r.x2, r.y1, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z1),
                                new THREE.Vector3(r.x1, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z2),
                                new THREE.Vector3(r.x2, r.y2, r.z1),
                            ];
                        (n = r.t), "PLY" == n ? (sel_texture = 10) : "P" == n ? (sel_texture = 5) : "MP" == n ? (sel_texture = 7) : "DMP" == n ? (sel_texture = 2) : (sel_texture = 6);
                        var a = THREE.SceneUtils.createMultiMaterialObject(new THREE.ConvexGeometry(o), F[sel_texture]);
                        (a.children[0].receiveShadow = !0), (a.children[0].castShadow = !0), D.add(a);
                    }
                    D.position.set(0, -0.2, 0), D.scale.set(5e-4, 5e-4, 5e-4), g.add(D), h("std_crate");
                })
                .fail(function () {
                    alert("Ajax failed!");
                });
        }),
        $("#all").click(function () {
            h(
                $("#std-crate").prop("checked")
                    ? "std_crate"
                    : $("#std-case").prop("checked")
                    ? "std_case"
                    : $("#fs-crate").prop("checked")
                    ? "fs_crate"
                    : $("#fs-case").prop("checked")
                    ? "fs_case"
                    : $("#display-case").prop("checked")
                    ? "display_case"
                    : "std_crate"
            );
        }),
        $("#base").click(function () {
            h(
                $("#std-crate").prop("checked")
                    ? "std_crate"
                    : $("#std-case").prop("checked")
                    ? "std_case"
                    : $("#fs-crate").prop("checked")
                    ? "fs_crate"
                    : $("#fs-case").prop("checked")
                    ? "fs_case"
                    : $("#display-case").prop("checked")
                    ? "display_case"
                    : "std_crate"
            );
        }),
        $("#side").click(function () {
            h(
                $("#std-crate").prop("checked")
                    ? "std_crate"
                    : $("#std-case").prop("checked")
                    ? "std_case"
                    : $("#fs-crate").prop("checked")
                    ? "fs_crate"
                    : $("#fs-case").prop("checked")
                    ? "fs_case"
                    : $("#display-case").prop("checked")
                    ? "display_case"
                    : "std_crate"
            );
        }),
        $("#end").click(function () {
            h(
                $("#std-crate").prop("checked")
                    ? "std_crate"
                    : $("#std-case").prop("checked")
                    ? "std_case"
                    : $("#fs-crate").prop("checked")
                    ? "fs_crate"
                    : $("#fs-case").prop("checked")
                    ? "fs_case"
                    : $("#display-case").prop("checked")
                    ? "display_case"
                    : "std_crate"
            );
        }),
        $("#top").click(function () {
            h(
                $("#std-crate").prop("checked")
                    ? "std_crate"
                    : $("#std-case").prop("checked")
                    ? "std_case"
                    : $("#fs-crate").prop("checked")
                    ? "fs_crate"
                    : $("#fs-case").prop("checked")
                    ? "fs_case"
                    : $("#display-case").prop("checked")
                    ? "display_case"
                    : "std_crate"
            );
        });
});
